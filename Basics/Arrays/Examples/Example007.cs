namespace Basics.Arrays.Examples;

public class Example007 {
    // Pascalâ€™s triangle. As we know from mathematics, the first row of the triangle contains the number 1 and
    // each next number is generated by sum of the two numbers on the row above it.

    public static void UserMain() {
        const int height = 12;
        long[][] triangle = new long[height + 1][];

        // Allocate the array in a triangle form
        for (int row = 0; row < height; row++) {
            triangle[row] = new long[row + 1];
        }

        // Allocate the array in a triangle form
        triangle[0][0] = 1;

        for (int row = 0; row < height - 1; row++) {
            for (int col = 0; col <= row; col++) {
                triangle[row + 1][col] += triangle[row][col];
                triangle[row + 1][col + 1] += triangle[row][col];
            }
        }

        // Print the Pascal's triangle
        for (int row = 0; row < height; row++) {
            Console.Write("".PadLeft((height - row) * 2));

            for (int col = 0; col <= row; col++) {
                // Interpolated string => {<interpolationExpression>[,<alignment>][:<formatString>]}
                Console.Write("{0,3} ", triangle[row][col]);
            }
            Console.WriteLine();
        }
    }
}